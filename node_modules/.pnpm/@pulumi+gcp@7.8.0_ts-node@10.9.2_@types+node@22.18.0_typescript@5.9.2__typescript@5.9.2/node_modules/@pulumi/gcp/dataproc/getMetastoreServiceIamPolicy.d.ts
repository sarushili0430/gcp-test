import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the current IAM policy data for service
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.dataproc.getMetastoreServiceIamPolicy({
 *     project: google_dataproc_metastore_service["default"].project,
 *     location: google_dataproc_metastore_service["default"].location,
 *     serviceId: google_dataproc_metastore_service["default"].service_id,
 * });
 * ```
 */
export declare function getMetastoreServiceIamPolicy(args: GetMetastoreServiceIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMetastoreServiceIamPolicyResult>;
/**
 * A collection of arguments for invoking getMetastoreServiceIamPolicy.
 */
export interface GetMetastoreServiceIamPolicyArgs {
    /**
     * The location where the metastore service should reside.
     * The default value is `global`.
     * Used to find the parent resource to bind the IAM policy to
     */
    location?: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
    serviceId: string;
}
/**
 * A collection of values returned by getMetastoreServiceIamPolicy.
 */
export interface GetMetastoreServiceIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * (Required only by `gcp.dataproc.MetastoreServiceIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
    readonly serviceId: string;
}
/**
 * Retrieves the current IAM policy data for service
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.dataproc.getMetastoreServiceIamPolicy({
 *     project: google_dataproc_metastore_service["default"].project,
 *     location: google_dataproc_metastore_service["default"].location,
 *     serviceId: google_dataproc_metastore_service["default"].service_id,
 * });
 * ```
 */
export declare function getMetastoreServiceIamPolicyOutput(args: GetMetastoreServiceIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetastoreServiceIamPolicyResult>;
/**
 * A collection of arguments for invoking getMetastoreServiceIamPolicy.
 */
export interface GetMetastoreServiceIamPolicyOutputArgs {
    /**
     * The location where the metastore service should reside.
     * The default value is `global`.
     * Used to find the parent resource to bind the IAM policy to
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
}
